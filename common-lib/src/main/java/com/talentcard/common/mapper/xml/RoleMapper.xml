<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.talentcard.common.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.talentcard.common.pojo.RolePO">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="extra" jdbcType="CHAR" property="extra" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="role_type" jdbcType="TINYINT" property="roleType" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, `name`, extra, create_time, role_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.talentcard.common.pojo.RolePO">
    insert into t_role (role_id, `name`, extra, 
      create_time, role_type)
    values (#{roleId,jdbcType=BIGINT}, #{name,jdbcType=CHAR}, #{extra,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{roleType,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.talentcard.common.pojo.RolePO">
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="extra != null">
        extra,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="roleType != null">
        role_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="extra != null">
        #{extra,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleType != null">
        #{roleType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.talentcard.common.pojo.RolePO">
    update t_role
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=CHAR},
      </if>
      <if test="extra != null">
        extra = #{extra,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleType != null">
        role_type = #{roleType,jdbcType=TINYINT},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.talentcard.common.pojo.RolePO">
    update t_role
    set `name` = #{name,jdbcType=CHAR},
      extra = #{extra,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      role_type = #{roleType,jdbcType=TINYINT}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>

  <!--  根据角色和开始结束时间间隔查询角色-->
  <select id="queryRoleByTime" resultType="com.talentcard.common.pojo.RolePO">
    select r.role_id as roleId,r.create_time as createTime, r.name, r.extra
    from t_role r
    <where>
      <if test="(startTime != null and startTime != '') and (endTime != null and endTime != '')">
        DATE_FORMAT(r.create_time,'%Y-%m-%d %H:%M:%S') between #{startTime} AND #{endTime}
      </if>
      <if test="(startTime != null and startTime != '') and (endTime == null || endTime == '')">
        AND DATE_FORMAT(r.create_time,'%Y-%m-%d %H:%M:%S') &gt;= #{startTime}
      </if>
      <if test="(startTime == null || startTime == '') and (endTime != null and endTime != '')">
        AND DATE_FORMAT(r.create_time,'%Y-%m-%d %H:%M:%S') &lt;= #{endTime}
      </if>
      <if test="roleName != null and roleName != ''">
        AND r.name like '%' #{roleName} '%'
      </if>
    </where>
  </select>

  <!--  根据角色名和创建时间查询 角色id-->
  <select id="queryRoleId" resultType="java.lang.Long">
    select r.role_id
    from t_role r
    where  r.create_time = #{createTime,jdbcType=TIMESTAMP} and  r.name = #{roleName,jdbcType=CHAR}
  </select>


  <select id="queryRoleNameMsg" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_role
  </select>

  <select id="queryRoleNameHave" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_role
    where `name` = #{roleName,jdbcType=CHAR}
  </select>

  <select id="queryResponsibleUnit" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_role
    where role_type = 2
  </select>

  <select id="findOne" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_role
    where role_id = #{roleId, jdbcType=BIGINT}
  </select>
</mapper>
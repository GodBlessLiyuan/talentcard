<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.talentcard.common.mapper.TalentFarmhouseMapper">
  <resultMap id="BaseResultMap" type="com.talentcard.common.pojo.TalentFarmhousePO">
    <id column="tt_id" jdbcType="BIGINT" property="ttId" />
    <result column="open_id" jdbcType="CHAR" property="openId" />
    <result column="farmhouse_id" jdbcType="BIGINT" property="farmhouseId" />
    <result column="staff_id" jdbcType="BIGINT" property="staffId" />
    <result column="discount" jdbcType="DOUBLE" property="discount" />
    <result column="effective_time" jdbcType="TIMESTAMP" property="effectiveTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="dr" jdbcType="TINYINT" property="dr" />
  </resultMap>
  <sql id="Base_Column_List">
    tt_id, open_id, farmhouse_id, staff_id, discount, effective_time, update_time, `status`, 
    dr
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_talent_farmhouse
    where tt_id = #{ttId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_talent_farmhouse
    where tt_id = #{ttId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.talentcard.common.pojo.TalentFarmhousePO">
    insert into t_talent_farmhouse (tt_id, open_id, farmhouse_id, 
      staff_id, discount, effective_time, 
      update_time, `status`, dr
      )
    values (#{ttId,jdbcType=BIGINT}, #{openId,jdbcType=CHAR}, #{farmhouseId,jdbcType=BIGINT}, 
      #{staffId,jdbcType=BIGINT}, #{discount,jdbcType=DOUBLE}, #{effectiveTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, #{dr,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.talentcard.common.pojo.TalentFarmhousePO">
    insert into t_talent_farmhouse
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ttId != null">
        tt_id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="farmhouseId != null">
        farmhouse_id,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="effectiveTime != null">
        effective_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="dr != null">
        dr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ttId != null">
        #{ttId,jdbcType=BIGINT},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=CHAR},
      </if>
      <if test="farmhouseId != null">
        #{farmhouseId,jdbcType=BIGINT},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=BIGINT},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=DOUBLE},
      </if>
      <if test="effectiveTime != null">
        #{effectiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="dr != null">
        #{dr,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.talentcard.common.pojo.TalentFarmhousePO">
    update t_talent_farmhouse
    <set>
      <if test="openId != null">
        open_id = #{openId,jdbcType=CHAR},
      </if>
      <if test="farmhouseId != null">
        farmhouse_id = #{farmhouseId,jdbcType=BIGINT},
      </if>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=BIGINT},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=DOUBLE},
      </if>
      <if test="effectiveTime != null">
        effective_time = #{effectiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="dr != null">
        dr = #{dr,jdbcType=TINYINT},
      </if>
    </set>
    where tt_id = #{ttId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.talentcard.common.pojo.TalentFarmhousePO">
    update t_talent_farmhouse
    set open_id = #{openId,jdbcType=CHAR},
      farmhouse_id = #{farmhouseId,jdbcType=BIGINT},
      staff_id = #{staffId,jdbcType=BIGINT},
      discount = #{discount,jdbcType=DOUBLE},
      effective_time = #{effectiveTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=TINYINT},
      dr = #{dr,jdbcType=TINYINT}
    where tt_id = #{ttId,jdbcType=BIGINT}
  </update>
  <select id="query" resultType="com.talentcard.common.bo.FarmHouseUserRealTimeBO">
    select ttf.tt_id as ttId,ttf.update_time as `time`,tf.name as name,tt.name as youkename,tt.card_id as cardID,ts.name as staffname
    from t_talent_farmhouse ttf left join t_farmhouse tf on ttf.farmhouse_id=tf.farmhouse_id
    left join t_staff ts on ttf.staff_id=ts.staff_id
    left join t_talent tt on ttf.open_id=tt.open_id
    where ttf.dr=1
    <if test="name!=null and name !=''">
      and tf.name like trim(replace (#{name,jdbcType=CHAR} '%' ,' ',''))
    </if>
    <if test="cardID!=null and cardID!=''">
     and tt.card_id=#{cardID,jdbcType=BIGINT}
    </if>
    <if test="start!=null and start!=''">
     and ttf.update_time>#{start}
    </if>
    <if test="end!=null and end!=''">
      and #{end}>ttf.update_time
    </if>
    order by ttf.tt_id desc
  </select>
  <select id="groupByUpdateTime" resultType="java.util.HashMap">
    SELECT DATE_FORMAT(ttf.update_time,'%Y-%m-%d') as updateTime FROM `t_talent_farmhouse` ttf GROUP BY updateTime order by ttf.tt_id
  </select>
  <!--思路：查询出表之后，分组之后再排序 ；CAST("${updateTime}" as DATE)替换#{updateTime}也对; -->
  <select id="queryByUpdateTime" parameterType="java.util.Map" resultType="com.talentcard.common.pojo.FarmhouseDailyPO">
    SELECT tf.farmhouse_id as farmhouseId ,#{updateTime} as dailyTime,concat("",tf.farmhouse_id,"-",#{updateTime}) as dailyFarmHouseID,tf.name,count(distinct ttf.open_id) as number,count(ttf.tt_id) as times
     from `t_talent_farmhouse` ttf left join t_farmhouse tf on ttf.farmhouse_id=tf.farmhouse_id
     where ttf.update_time>=#{start} and #{end}>=ttf.update_time and ttf.dr=1 group by tf.farmhouse_id order by tf.name asc
  </select>
  <select id="groupByMonthUseUpdateTime" resultType="java.util.HashMap">
    SELECT DATE_FORMAT(ttf.update_time,'%Y-%m') as updateTime FROM t_talent_farmhouse ttf GROUP BY updateTime
  </select>
  <!--查询当月的数据，且按照农家乐的id分组，目前用在定时任务中-->
  <select id="getMonthCountByUpdateTime" parameterType="java.util.Map" resultType="com.talentcard.common.pojo.FarmhouseMonthPO">
    SELECT tf.farmhouse_id as farmhouseId ,#{updateTime} as `month` ,concat("",tf.farmhouse_id,"-",#{updateTimeSQL}) as monthFarmhouseID,tf.name,
    count(distinct ttf.open_id) as number,count(ttf.tt_id) as times
     from `t_talent_farmhouse` ttf left join t_farmhouse tf on ttf.farmhouse_id=tf.farmhouse_id
     where ttf.update_time>=#{start} and #{end}>=ttf.update_time and ttf.dr=1 group by tf.farmhouse_id order by tf.name asc
  </select>
  <!--总计，按照月时间查询统计人数和天数，且有筛选条件-->
  <select id="queryTotalByUpdateTime" parameterType="java.util.Map" resultType="java.util.HashMap">
    select count(distinct ttf.open_id) as totalNumber,count(ttf.tt_id) as totalTimes
     from `t_talent_farmhouse` ttf left join t_farmhouse tf on ttf.farmhouse_id=tf.farmhouse_id
    <where>
      <if test="start!=null">
        ttf.update_time>=#{start}
      </if>
      <if test="end!=null">
        and #{end}>=ttf.update_time
      </if>
      <if test="name!=null">
        and tf.name like #{name} '%'
      </if>
        and ttf.dr=1
    </where>
  </select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.talentcard.common.mapper.TalentActivityHistoryMapper">
    <resultMap id="BaseResultMap" type="com.talentcard.common.pojo.TalentActivityHistoryPO">
        <id column="tah_id" jdbcType="BIGINT" property="tahId"/>
        <result column="open_id" jdbcType="CHAR" property="openId"/>
        <result column="staff_id" jdbcType="BIGINT" property="staffId"/>
        <result column="activity_first_content_id" jdbcType="BIGINT" property="activityFirstContentId"/>
        <result column="activity_second_content_id" jdbcType="BIGINT" property="activitySecondContentId"/>
        <result column="activity_second_content_name" jdbcType="CHAR" property="activitySecondContentName"/>
        <result column="ip_address" jdbcType="CHAR" property="ipAddress"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="dr" jdbcType="TINYINT" property="dr"/>
    </resultMap>
    <sql id="Base_Column_List">
    tah_id, open_id, staff_id, activity_first_content_id, activity_second_content_id, 
    activity_second_content_name, ip_address, create_time, `status`, dr
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_talent_activity_history
        where tah_id = #{tahId,jdbcType=BIGINT}
    </select>
    <!--WHERE tah.activity_first_content_id = 1代表旅游，2位农家乐-->
    <select id="query" parameterType="java.util.Map" resultType="com.talentcard.common.bo.TripRealTimeBO">
        select tah.create_time as `time` ,tah.activity_second_content_name as scenicName,t.name as youkename, t.card_id as cardId,
          tah.status as welfare,tah.staff_id as staffID
          from t_talent_activity_history tah left join t_talent t on tah.open_id=t.open_id
         where tah.activity_first_content_id=1
          <if test="welfareType!=null">
             and tah.status=#{welfareType}
          </if>
          <if test="cardID!=null">
            and t.card_id=#{cardID}
          </if>
          <if test="start!=null">
             and tah.create_time>=#{start}
          </if>
          <if test="end">
             and #{end}>=tah.create_time
          </if>
          and tah.dr=1 and t.dr=1 order by tah_id desc
    </select>
    <select id="groupDailyByTime" resultType="java.util.HashMap">
     select DATE_FORMAT(tah.create_time,'%Y-%m-%d') as updateTime from t_talent_activity_history tah GROUP BY updateTime
    </select>
    <select id="groupMonthByTime" resultType="java.util.HashMap">
        select DATE_FORMAT(tah.create_time,'%Y-%m') as updateTime from t_talent_activity_history tah GROUP BY updateTime
    </select>
    <!--按照景点分组之后按照景点名排序-->
    <select id="getDailyPOS" parameterType="java.util.Map" resultType="com.talentcard.common.pojo.TripDailyPO">
        select concat("",tah.activity_second_content_id,"-",#{updateTime})as sidDaily,tah.activity_second_content_id as sid,
        #{updateTime} as daily,tah.activity_second_content_name as scenicName,
        count(distinct tah.open_id) as numbers from t_talent_activity_history tah
        where tah.activity_first_content_id=1 and tah.create_time>=#{start} and #{end}>=tah.create_time and dr=1
        group by tah.activity_second_content_id order by tah.activity_second_content_name asc
    </select>
    <!--日月统计的sql几乎一样-->
    <select id="getMonthPOS" parameterType="java.util.Map" resultType="com.talentcard.common.pojo.TripMonthPO">
        select concat("",tah.activity_second_content_id,"-",#{updateTimeSQL})as sidMonth,tah.activity_second_content_id as sid,
        #{updateTime} as `month`,tah.activity_second_content_name as name,
        count(distinct tah.open_id) as numbers from t_talent_activity_history tah
        where tah.activity_first_content_id=1 and tah.create_time>=#{start} and #{end}>=tah.create_time and dr=1
        group by tah.activity_second_content_id order by tah.activity_second_content_name asc
    </select>
    <select id="getFreeOrDiscount" parameterType="java.util.Map" resultType="java.lang.Long">
        select count(tah.tah_id) from t_talent_activity_history tah
        where tah.activity_first_content_id=1 and tah.activity_second_content_id=#{sid}
         and tah.create_time>=#{start} and #{end}>=tah.create_time and status=#{status} and dr=1
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_talent_activity_history
    where tah_id = #{tahId,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.talentcard.common.pojo.TalentActivityHistoryPO">
    insert into t_talent_activity_history (tah_id, open_id, staff_id, 
      activity_first_content_id, activity_second_content_id, 
      activity_second_content_name, ip_address, create_time, 
      `status`, dr)
    values (#{tahId,jdbcType=BIGINT}, #{openId,jdbcType=CHAR}, #{staffId,jdbcType=BIGINT}, 
      #{activityFirstContentId,jdbcType=BIGINT}, #{activitySecondContentId,jdbcType=BIGINT}, 
      #{activitySecondContentName,jdbcType=CHAR}, #{ipAddress,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=TINYINT}, #{dr,jdbcType=TINYINT})
  </insert>
    <insert id="insertSelective" parameterType="com.talentcard.common.pojo.TalentActivityHistoryPO">
        insert into t_talent_activity_history
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tahId != null">
                tah_id,
            </if>
            <if test="openId != null">
                open_id,
            </if>
            <if test="staffId != null">
                staff_id,
            </if>
            <if test="activityFirstContentId != null">
                activity_first_content_id,
            </if>
            <if test="activitySecondContentId != null">
                activity_second_content_id,
            </if>
            <if test="activitySecondContentName != null">
                activity_second_content_name,
            </if>
            <if test="ipAddress != null">
                ip_address,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="dr != null">
                dr,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tahId != null">
                #{tahId,jdbcType=BIGINT},
            </if>
            <if test="openId != null">
                #{openId,jdbcType=CHAR},
            </if>
            <if test="staffId != null">
                #{staffId,jdbcType=BIGINT},
            </if>
            <if test="activityFirstContentId != null">
                #{activityFirstContentId,jdbcType=BIGINT},
            </if>
            <if test="activitySecondContentId != null">
                #{activitySecondContentId,jdbcType=BIGINT},
            </if>
            <if test="activitySecondContentName != null">
                #{activitySecondContentName,jdbcType=CHAR},
            </if>
            <if test="ipAddress != null">
                #{ipAddress,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="dr != null">
                #{dr,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.talentcard.common.pojo.TalentActivityHistoryPO">
        update t_talent_activity_history
        <set>
            <if test="openId != null">
                open_id = #{openId,jdbcType=CHAR},
            </if>
            <if test="staffId != null">
                staff_id = #{staffId,jdbcType=BIGINT},
            </if>
            <if test="activityFirstContentId != null">
                activity_first_content_id = #{activityFirstContentId,jdbcType=BIGINT},
            </if>
            <if test="activitySecondContentId != null">
                activity_second_content_id = #{activitySecondContentId,jdbcType=BIGINT},
            </if>
            <if test="activitySecondContentName != null">
                activity_second_content_name = #{activitySecondContentName,jdbcType=CHAR},
            </if>
            <if test="ipAddress != null">
                ip_address = #{ipAddress,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=TINYINT},
            </if>
            <if test="dr != null">
                dr = #{dr,jdbcType=TINYINT},
            </if>
        </set>
        where tah_id = #{tahId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.talentcard.common.pojo.TalentActivityHistoryPO">
    update t_talent_activity_history
    set open_id = #{openId,jdbcType=CHAR},
      staff_id = #{staffId,jdbcType=BIGINT},
      activity_first_content_id = #{activityFirstContentId,jdbcType=BIGINT},
      activity_second_content_id = #{activitySecondContentId,jdbcType=BIGINT},
      activity_second_content_name = #{activitySecondContentName,jdbcType=CHAR},
      ip_address = #{ipAddress,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=TINYINT},
      dr = #{dr,jdbcType=TINYINT}
    where tah_id = #{tahId,jdbcType=BIGINT}
  </update>
    <select id="findByOpenId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_talent_activity_history
        where open_id = #{openId,jdbcType=CHAR}
        and dr = 1
        order by tah_id desc
    </select>

    <select id="getVertifyNum" resultType="java.lang.Long">
        select
        count(staff_id)
        from t_talent_activity_history
        where
        dr = 1
        <if test="staffId != null and staffId != ''">
            and staff_id = #{staffId,jdbcType=BIGINT}
        </if>
        <if test="activityFirstContentId != null and activityFirstContentId != ''">
            and activity_first_content_id = #{activityFirstContentId,jdbcType=BIGINT}
        </if>
        <if test="activitySecondContentId != null and activitySecondContentId != ''">
            and activity_second_content_id = #{activitySecondContentId,jdbcType=BIGINT}
        </if>

        <if test="startTime != null and startTime != ''">
            and <![CDATA[ create_time >= #{startTime}]]>
        </if>
        <if test="endTime != null and endTime != ''">
            and <![CDATA[ create_time <= #{endTime}]]>
        </if>
    </select>
    <select id="getCostTimes" resultType="java.lang.Long">
        select
        count(staff_id)
        from t_talent_activity_history
        where
        dr = 1
        and activity_first_content_id != 2
        <if test="startTime != null and startTime != ''">
            and <![CDATA[ create_time >= #{startTime}]]>
        </if>
        <if test="endTime != null and endTime != ''">
            and <![CDATA[ create_time <= #{endTime}]]>
        </if>
    </select>
    <select id="footprint" resultType="com.talentcard.common.bo.FootprintBO">
        select
        open_id as openId,
        activity_first_content_id as activityFirstContentId,
        activity_second_content_id as activitySecondContentId,
        activity_second_content_name as name,
         count(open_id) as useTimes
        from t_talent_activity_history
        where
        open_id = #{openId,jdbcType=CHAR}
        and
        dr = 1
        and
        status = 2
        group by
        open_id,
        activity_first_content_id,
        activity_second_content_id,
        activity_second_content_name
        order by count(open_id) desc
    </select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.talentcard.common.mapper.TalentTripMapper">
  <resultMap id="BaseResultMap" type="com.talentcard.common.pojo.TalentTripPO">
    <id column="tt_id" jdbcType="BIGINT" property="ttId" />
    <result column="open_id" jdbcType="CHAR" property="openId" />
    <result column="scenic_id" jdbcType="BIGINT" property="scenicId" />
    <result column="staff_id" jdbcType="BIGINT" property="staffId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="effective_time" jdbcType="TIMESTAMP" property="effectiveTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="dr" jdbcType="TINYINT" property="dr" />
    <result column="usage_period" jdbcType="CHAR" property="usagePeriod" />
    <result column="effective_time_start" jdbcType="TIMESTAMP" property="effectiveTimeStart" />
  </resultMap>
  <sql id="Base_Column_List">
    tt_id, open_id, scenic_id, staff_id, create_time, effective_time, update_time, `status`, 
    dr, usage_period, effective_time_start
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_talent_trip
    where tt_id = #{ttId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_talent_trip
    where tt_id = #{ttId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.talentcard.common.pojo.TalentTripPO">
    insert into t_talent_trip (tt_id, open_id, scenic_id, 
      staff_id, create_time, effective_time, 
      update_time, `status`, dr, 
      usage_period, effective_time_start)
    values (#{ttId,jdbcType=BIGINT}, #{openId,jdbcType=CHAR}, #{scenicId,jdbcType=BIGINT}, 
      #{staffId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{effectiveTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, #{dr,jdbcType=TINYINT}, 
      #{usagePeriod,jdbcType=CHAR}, #{effectiveTimeStart,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.talentcard.common.pojo.TalentTripPO">
    insert into t_talent_trip
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ttId != null">
        tt_id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="scenicId != null">
        scenic_id,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="effectiveTime != null">
        effective_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="usagePeriod != null">
        usage_period,
      </if>
      <if test="effectiveTimeStart != null">
        effective_time_start,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ttId != null">
        #{ttId,jdbcType=BIGINT},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=CHAR},
      </if>
      <if test="scenicId != null">
        #{scenicId,jdbcType=BIGINT},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="effectiveTime != null">
        #{effectiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="dr != null">
        #{dr,jdbcType=TINYINT},
      </if>
      <if test="usagePeriod != null">
        #{usagePeriod,jdbcType=CHAR},
      </if>
      <if test="effectiveTimeStart != null">
        #{effectiveTimeStart,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.talentcard.common.pojo.TalentTripPO">
    update t_talent_trip
    <set>
      <if test="openId != null">
        open_id = #{openId,jdbcType=CHAR},
      </if>
      <if test="scenicId != null">
        scenic_id = #{scenicId,jdbcType=BIGINT},
      </if>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="effectiveTime != null">
        effective_time = #{effectiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="dr != null">
        dr = #{dr,jdbcType=TINYINT},
      </if>
      <if test="usagePeriod != null">
        usage_period = #{usagePeriod,jdbcType=CHAR},
      </if>
      <if test="effectiveTimeStart != null">
        effective_time_start = #{effectiveTimeStart,jdbcType=TIMESTAMP},
      </if>
    </set>
    where tt_id = #{ttId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.talentcard.common.pojo.TalentTripPO">
    update t_talent_trip
    set open_id = #{openId,jdbcType=CHAR},
      scenic_id = #{scenicId,jdbcType=BIGINT},
      staff_id = #{staffId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      effective_time = #{effectiveTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=TINYINT},
      dr = #{dr,jdbcType=TINYINT},
      usage_period = #{usagePeriod,jdbcType=CHAR},
      effective_time_start = #{effectiveTimeStart,jdbcType=TIMESTAMP}
    where tt_id = #{ttId,jdbcType=BIGINT}
  </update>
  <select id="findOneNotExpired" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from t_talent_trip
    where
    open_id = #{openId,jdbcType=CHAR}
    and dr = 1
    and `status` = 1
    and scenic_id = #{activitySecondContentId,jdbcType=BIGINT}
    <if test="currentTime != null and currentTime!=''">
      and <![CDATA[ effective_time >= #{currentTime}]]>
    </if>
  </select>
  <select id="talentGetTimes" resultType="java.lang.Integer">
    select
    count(tt_id)
    from t_talent_trip t
    where scenic_id = #{activitySecondContentId,jdbcType=BIGINT}
    and open_id = #{openId,jdbcType=CHAR}
    and `status` = #{status,jdbcType=TINYINT}
    and <![CDATA[ create_time >= #{startTime}]]>
    and <![CDATA[ create_time <= #{endTime}]]>
    and dr =1
  </select>

  <select id="talentGetTimesByAll" resultType="java.lang.Integer">
    select
    count(tt_id)
    from t_talent_trip
    where open_id = #{openId,jdbcType=CHAR}
    and `status` = #{status,jdbcType=TINYINT}
    and <![CDATA[ create_time >= #{startTime}]]>
    and <![CDATA[ create_time <= #{endTime}]]>
    and dr = 1
  </select>

  <select id="getCostTimes" resultType="java.lang.Long">
    select
    count(tt_id)
    from t_talent_trip
    where
    dr = 1
    <if test="startTime != null and startTime != ''">
      and <![CDATA[ create_time >= #{startTime}]]>
    </if>
    <if test="endTime != null and endTime != ''">
      and <![CDATA[ create_time <= #{endTime}]]>
    </if>
  </select>
  <select id="findActivityCardTicket" resultType="com.talentcard.common.bo.ActivityCardTicketBO">
    select
    tt.scenic_id as activitySecondContentId, s.name as activitySecondContentName,usage_period as usagePeriod,
    1 as activityFirstContentId
    from t_talent_trip tt
    left join t_scenic s
    on tt.scenic_id = s.scenic_id
    where
    tt.dr = 1
    and tt.open_id = #{openId,jdbcType=CHAR}
    /*待使用*/
    <if test="type==1">
      and <![CDATA[ tt.effective_time >= #{currentTime}]]>
      and tt.status = 1
      order by tt.create_time desc
    </if>
    /*已使用*/
    <if test="type==2">
      and tt.status = 2
      order by tt.update_time desc
    </if>
    /*已过期*/
    <if test="type==3">
      and <![CDATA[ tt.effective_time <= #{currentTime}]]>
      and tt.status = 1
      order by tt.create_time desc
    </if>
  </select>
</mapper>
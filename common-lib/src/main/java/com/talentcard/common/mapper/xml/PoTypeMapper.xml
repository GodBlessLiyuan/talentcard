<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.talentcard.common.mapper.PoTypeMapper">
    <resultMap id="BaseResultMap" type="com.talentcard.common.pojo.PoTypePO">
        <id column="p_tId" jdbcType="BIGINT" property="pTid"/>
        <result column="p_type_name" jdbcType="CHAR" property="pTypeName"/>
        <result column="exclude_id" jdbcType="CHAR" property="excludeId"/>
        <result column="best_policys" jdbcType="CHAR" property="bestPolicys"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="dr" jdbcType="TINYINT" property="dr"/>
        <result column="description" jdbcType="CHAR" property="description"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    p_tId, p_type_name, exclude_id, best_policys, `status`, dr, description, update_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from po_type
        where p_tId = #{pTid,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from po_type
    where p_tId = #{pTid,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.talentcard.common.pojo.PoTypePO">
    insert into po_type (p_tId, p_type_name, exclude_id, 
      best_policys, `status`, dr, 
      description, update_time)
    values (#{pTid,jdbcType=BIGINT}, #{pTypeName,jdbcType=CHAR}, #{excludeId,jdbcType=CHAR}, 
      #{bestPolicys,jdbcType=CHAR}, #{status,jdbcType=TINYINT}, #{dr,jdbcType=TINYINT}, 
      #{description,jdbcType=CHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.talentcard.common.pojo.PoTypePO" keyProperty="pTid" useGeneratedKeys="true">
        insert into po_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pTid != null">
                p_tId,
            </if>
            <if test="pTypeName != null">
                p_type_name,
            </if>
            <if test="excludeId != null">
                exclude_id,
            </if>
            <if test="bestPolicys != null">
                best_policys,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="dr != null">
                dr,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pTid != null">
                #{pTid,jdbcType=BIGINT},
            </if>
            <if test="pTypeName != null">
                #{pTypeName,jdbcType=CHAR},
            </if>
            <if test="excludeId != null">
                #{excludeId,jdbcType=CHAR},
            </if>
            <if test="bestPolicys != null">
                #{bestPolicys,jdbcType=CHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="dr != null">
                #{dr,jdbcType=TINYINT},
            </if>
            <if test="description != null">
                #{description,jdbcType=CHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.talentcard.common.pojo.PoTypePO">
        update po_type
        <set>
            <if test="pTypeName != null">
                p_type_name = #{pTypeName,jdbcType=CHAR},
            </if>
            <if test="excludeId != null">
                exclude_id = #{excludeId,jdbcType=CHAR},
            </if>
            <if test="bestPolicys != null">
                best_policys = #{bestPolicys,jdbcType=CHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=TINYINT},
            </if>
            <if test="dr != null">
                dr = #{dr,jdbcType=TINYINT},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=CHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where p_tId = #{pTid,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.talentcard.common.pojo.PoTypePO">
    update po_type
    set p_type_name = #{pTypeName,jdbcType=CHAR},
      exclude_id = #{excludeId,jdbcType=CHAR},
      best_policys = #{bestPolicys,jdbcType=CHAR},
      `status` = #{status,jdbcType=TINYINT},
      dr = #{dr,jdbcType=TINYINT},
      description = #{description,jdbcType=CHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where p_tId = #{pTid,jdbcType=BIGINT}
  </update>

    <!--政策类型首页首页数据查询-->
    <sql id="pageQuery_Column_List">
    p_tId as pTid, p_type_name as pTypeName, exclude_id as excludeId, best_policys as bestPolicys, `status`, dr, description, update_time as updateTime
    </sql>
    <select id="pageQuery" parameterType="java.util.Map" resultType="com.talentcard.common.bo.PolicyTypeBO">
        SELECT
        <include refid="pageQuery_Column_List"/>
        FROM
        po_type
        <where>
            dr = 1
            <if test="status != null and status !=''">and status = #{status,jdbcType=CHAR}</if>
        </where>
        order by `status` asc, update_time desc
    </select>
    <!-- 根据政策id查询出政策名称 -->
    <select id="queryPtNameByPtId" parameterType="java.util.List" resultType="com.talentcard.common.bo.PolicyTypeBO">
        SELECT p_type_name as pTypeName FROM po_type
        <where>
            <!-- foreach标签，进行遍历 -->
            <!-- collection：遍历的集合，这里是QueryVo的ids属性 -->
            <!-- item：遍历的项目，可以随便写，，但是和后面的#{}里面要一致 -->
            <!-- open：在前面添加的sql片段 -->
            <!-- close：在结尾处添加的sql片段 -->
            <!-- separator：指定遍历的元素之间使用的分隔符 -->
            <foreach collection="reqData" item="item" open="p_tId IN (" close=")" separator=",">
                #{item}
            </foreach>
        </where>
    </select>

    <!-- 查出所有政策名称id和对应的政策名称 -->
    <select id="queryExIdAndName" resultType="com.talentcard.common.bo.PolicyTypeBO">
    SELECT p_tId as pTid, p_type_name as pTypeName, `status` FROM po_type
    <where>
    dr = 1
    </where>
    order by `status` asc,update_time desc
    </select>

</mapper>
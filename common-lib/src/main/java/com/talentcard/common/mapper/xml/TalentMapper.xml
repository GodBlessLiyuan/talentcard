<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.talentcard.common.mapper.TalentMapper">
    <resultMap id="BaseResultMap" type="com.talentcard.common.pojo.TalentPO">
        <id column="talent_id" jdbcType="BIGINT" property="talentId"/>
        <result column="open_id" jdbcType="CHAR" property="openId"/>
        <result column="union_id" jdbcType="CHAR" property="unionId"/>
        <result column="name" jdbcType="CHAR" property="name"/>
        <result column="sex" jdbcType="TINYINT" property="sex"/>
        <result column="id_card" jdbcType="CHAR" property="idCard"/>
        <result column="passport" jdbcType="CHAR" property="passport"/>
        <result column="driver_card" jdbcType="CHAR" property="driverCard"/>
        <result column="card_type" jdbcType="TINYINT" property="cardType"/>
        <result column="work_unit" jdbcType="CHAR" property="workUnit"/>
        <result column="industry" jdbcType="INTEGER" property="industry"/>
        <result column="industry_second" jdbcType="INTEGER" property="industrySecond"/>
        <result column="phone" jdbcType="CHAR" property="phone"/>
        <result column="political" jdbcType="TINYINT" property="political"/>
        <result column="category" jdbcType="CHAR" property="category"/>
        <result column="work_location" jdbcType="CHAR" property="workLocation"/>
        <result column="work_location_type" jdbcType="TINYINT" property="workLocationType"/>
        <result column="card_id" jdbcType="BIGINT" property="cardId"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="dr" jdbcType="TINYINT" property="dr"/>
        <result column="talent_source" jdbcType="INTEGER" property="talentSource"/>
    </resultMap>
    <resultMap id="TalentResultMap" type="com.talentcard.common.bo.TalentBO">
        <id column="t_talent_id" jdbcType="BIGINT" property="talentId"/>
        <result column="t_open_id" jdbcType="CHAR" property="openId"/>
        <result column="t_name" jdbcType="CHAR" property="name"/>
        <result column="t_sex" jdbcType="TINYINT" property="sex"/>
        <result column="t_id_card" jdbcType="CHAR" property="idCard"/>
        <result column="t_passport" jdbcType="CHAR" property="passport"/>
        <result column="t_driver_card" jdbcType="CHAR" property="driverCard"/>
        <result column="t_card_type" jdbcType="TINYINT" property="cardType"/>
        <result column="t_work_unit" jdbcType="CHAR" property="workUnit"/>
        <result column="t_industry" jdbcType="INTEGER" property="industry"/>
        <result column="t_industry_second" jdbcType="INTEGER" property="industrySecond"/>
        <result column="t_political" jdbcType="TINYINT" property="political"/>
        <result column="t_phone" jdbcType="CHAR" property="phone"/>
        <result column="t_create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="t_category" jdbcType="CHAR" property="category"/>
        <result column="t_work_location" jdbcType="CHAR" property="workLocation"/>
        <result column="t_work_location_type" jdbcType="TINYINT" property="workLocationType"/>
        <result column="t_status" jdbcType="TINYINT" property="status"/>
        <result column="t_card_id" jdbcType="BIGINT" property="cardId"/>
        <result column="t_dr" jdbcType="TINYINT" property="dr"/>
        <result column="t_talent_source" jdbcType="INTEGER" property="talentSource"/>

        <result column="c_cert_id" jdbcType="BIGINT" property="certId"/>
        <result column="c_status" jdbcType="TINYINT" property="certificationStatus"/>
        <result column="c_current_type" jdbcType="TINYINT" property="currentType"/>
        <result column="c_create_time" jdbcType="TINYINT" property="firstCertificationTime"/>

        <collection property="educationPOList" ofType="com.talentcard.common.pojo.EducationPO">
            <id column="e_educ_id" jdbcType="BIGINT" property="educId"/>
            <result column="e_education" jdbcType="INTEGER" property="education"/>
            <result column="e_school" jdbcType="CHAR" property="school"/>
            <result column="e_first_class" jdbcType="TINYINT" property="firstClass"/>
            <result column="e_major" jdbcType="CHAR" property="major"/>
            <result column="e_educ_picture" jdbcType="CHAR" property="educPicture"/>
            <result column="e_educ_picture2" jdbcType="CHAR" property="educPicture2"/>
            <result column="e_educ_picture3" jdbcType="CHAR" property="educPicture3"/>
            <result column="e_cert_id" jdbcType="BIGINT" property="certId"/>
            <result column="e_talent_id" jdbcType="BIGINT" property="talentId"/>
            <result column="e_status" jdbcType="TINYINT" property="status"/>
            <result column="e_if_certificate" jdbcType="TINYINT" property="ifCertificate"/>
            <result column="e_graduate_time" jdbcType="CHAR" property="graduateTime"/>
            <result column="e_full_time" jdbcType="TINYINT" property="fullTime"/>
        </collection>
        <collection property="profTitlePOList" ofType="com.talentcard.common.pojo.ProfTitlePO">
            <id column="pt_pt_id" jdbcType="BIGINT" property="ptId"/>
            <result column="pt_category" jdbcType="INTEGER" property="category"/>
            <result column="pt_info" jdbcType="CHAR" property="info"/>
            <result column="pt_picture" jdbcType="CHAR" property="picture"/>
            <result column="pt_picture2" jdbcType="CHAR" property="picture2"/>
            <result column="pt_picture3" jdbcType="CHAR" property="picture3"/>
            <result column="pt_cert_id" jdbcType="BIGINT" property="certId"/>
            <result column="pt_talent_id" jdbcType="BIGINT" property="talentId"/>
            <result column="pt_status" jdbcType="TINYINT" property="status"/>
            <result column="pt_if_certificate" jdbcType="TINYINT" property="ifCertificate"/>
        </collection>
        <collection property="profQualityPOList" ofType="com.talentcard.common.pojo.ProfQualityPO">
            <id column="pq_pq_id" jdbcType="BIGINT" property="pqId"/>
            <result column="pq_category" jdbcType="INTEGER" property="category"/>
            <result column="pq_info" jdbcType="CHAR" property="info"/>
            <result column="pq_picture" jdbcType="CHAR" property="picture"/>
            <result column="pq_picture2" jdbcType="CHAR" property="picture2"/>
            <result column="pq_picture3" jdbcType="CHAR" property="picture3"/>
            <result column="pq_cert_id" jdbcType="BIGINT" property="certId"/>
            <result column="pq_talent_id" jdbcType="BIGINT" property="talentId"/>
            <result column="pq_status" jdbcType="TINYINT" property="status"/>
            <result column="pq_if_certificate" jdbcType="TINYINT" property="ifCertificate"/>
        </collection>
        <collection property="talentHonourPOList" ofType="com.talentcard.common.pojo.TalentHonourPO">
            <id column="th_th_id" jdbcType="BIGINT" property="thId"/>
            <result column="th_honour_id" jdbcType="BIGINT" property="honourId"/>
            <result column="th_honour_picture" jdbcType="CHAR" property="honourPicture"/>
            <result column="th_honour_picture2" jdbcType="CHAR" property="honourPicture2"/>
            <result column="th_honour_picture3" jdbcType="CHAR" property="honourPicture3"/>
            <result column="th_info" jdbcType="CHAR" property="info"/>
            <result column="th_cert_id" jdbcType="BIGINT" property="certId"/>
            <result column="th_talent_id" jdbcType="BIGINT" property="talentId"/>
            <result column="th_status" jdbcType="TINYINT" property="status"/>
            <result column="th_if_certificate" jdbcType="TINYINT" property="ifCertificate"/>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
    talent_id, open_id, union_id, `name`, sex, id_card, passport, driver_card, card_type,
    work_unit, industry, industry_second, phone, political, category, work_location, 
    work_location_type, card_id, `status`, create_time, dr, talent_source
    </sql>
    <sql id="Talent_BO_List">
    t.talent_id          as t_talent_id,
               t.open_id            as t_open_id,
               t.`name`             as t_name,
               t.sex                as t_sex,
               t.id_card            as t_id_card,
               t.passport           as t_passport,
               t.driver_card        as t_driver_card,
               t.card_type          as t_card_type,
               t.work_unit          as t_work_unit,
               t.industry           as t_industry,
               t.industry_second    as t_industry_second,
               t.political          as t_political,
               t.phone              as t_phone,
               t.create_time        as t_create_time,
               t.`status`           as t_status,
               t.category           as t_category,
               t.work_location      as t_work_location,
               t.work_location_type as t_work_location_type,
               t.card_id            as t_card_id,
               t.dr                 as t_dr,
               t.talent_source      as t_talent_source,

               c.cert_id            as c_cert_id,
               c.status             as c_status,
               c.current_type       as c_current_type,
               c.create_time        as c_create_time,

               e.educ_id            as e_educ_id,
               e.education          as e_education,
               e.school             as e_school,
               e.first_class        as e_first_class,
               e.major              as e_major,
               e.educ_picture       as e_educ_picture,
               e.educ_picture2      as e_educ_picture2,
               e.educ_picture3      as e_educ_picture3,
               e.cert_id            as e_cert_id,
               e.talent_id          as e_talent_id,
               e.status             as e_status,
               e.if_certificate     as e_if_certificate,
               e.graduate_time      as e_graduate_time,
               e.full_time          as e_full_time,

               pt.pt_id             as pt_pt_id,
               pt.category          as pt_category,
               pt.info              as pt_info,
               pt.picture           as pt_picture,
               pt.picture2          as pt_picture3,
               pt.picture2          as pt_picture3,
               pt.cert_id           as pt_cert_id,
               pt.talent_id         as pt_talent_id,
               pt.status            as pt_status,
               pt.if_certificate    as pt_if_certificate,

               pq.pq_id             as pq_pq_id,
               pq.category          as pq_category,
               pq.info              as pq_info,
               pq.picture           as pq_picture,
               pq.picture2          as pq_picture2,
               pq.picture3          as pq_picture3,
               pq.cert_id           as pq_cert_id,
               pq.talent_id         as pq_talent_id,
               pq.status            as pq_status,
               pq.if_certificate    as pq_if_certificate,

               th.th_id             as th_th_id,
               th.honour_id         as th_honour_id,
               th.honour_picture    as th_honour_picture,
               th.honour_picture2    as th_honour_picture2,
               th.honour_picture3    as th_honour_picture3,
               th.info              as th_info,
               th.cert_id           as th_cert_id,
               th.talent_id         as th_talent_id,
               th.`status`          as th_status,
               th.if_certificate    as th_if_certificate
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_talent
        where talent_id = #{talentId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from t_talent
        where talent_id = #{talentId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.talentcard.common.pojo.TalentPO">
        insert into t_talent (talent_id, open_id, union_id,
                              `name`, sex, id_card, passport,
                              driver_card, card_type, work_unit,
                              industry, industry_second, phone,
                              political, category, work_location,
                              work_location_type, card_id, `status`,
                              create_time, dr, talent_source)
        values (#{talentId,jdbcType=BIGINT}, #{openId,jdbcType=CHAR}, #{unionId,jdbcType=CHAR},
                #{name,jdbcType=CHAR}, #{sex,jdbcType=TINYINT}, #{idCard,jdbcType=CHAR}, #{passport,jdbcType=CHAR},
                #{driverCard,jdbcType=CHAR}, #{cardType,jdbcType=TINYINT}, #{workUnit,jdbcType=CHAR},
                #{industry,jdbcType=INTEGER}, #{industrySecond,jdbcType=INTEGER}, #{phone,jdbcType=CHAR},
                #{political,jdbcType=TINYINT}, #{category,jdbcType=CHAR}, #{workLocation,jdbcType=CHAR},
                #{workLocationType,jdbcType=TINYINT}, #{cardId,jdbcType=BIGINT}, #{status,jdbcType=TINYINT},
                #{createTime,jdbcType=TIMESTAMP}, #{dr,jdbcType=TINYINT}, #{talentSource,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.talentcard.common.pojo.TalentPO">
        insert into t_talent
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="talentId != null">
                talent_id,
            </if>
            <if test="openId != null">
                open_id,
            </if>
            <if test="unionId != null">
                union_id,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="idCard != null">
                id_card,
            </if>
            <if test="passport != null">
                passport,
            </if>
            <if test="driverCard != null">
                driver_card,
            </if>
            <if test="cardType != null">
                card_type,
            </if>
            <if test="workUnit != null">
                work_unit,
            </if>
            <if test="industry != null">
                industry,
            </if>
            <if test="industrySecond != null">
                industry_second,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="political != null">
                political,
            </if>
            <if test="category != null">
                category,
            </if>
            <if test="workLocation != null">
                work_location,
            </if>
            <if test="workLocationType != null">
                work_location_type,
            </if>
            <if test="cardId != null">
                card_id,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="dr != null">
                dr,
            </if>
            <if test="talentSource != null">
                talent_source,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="talentId != null">
                #{talentId,jdbcType=BIGINT},
            </if>
            <if test="openId != null">
                #{openId,jdbcType=CHAR},
            </if>
            <if test="unionId != null">
                #{unionId,jdbcType=CHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=CHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=TINYINT},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=CHAR},
            </if>
            <if test="passport != null">
                #{passport,jdbcType=CHAR},
            </if>
            <if test="driverCard != null">
                #{driverCard,jdbcType=CHAR},
            </if>
            <if test="cardType != null">
                #{cardType,jdbcType=TINYINT},
            </if>
            <if test="workUnit != null">
                #{workUnit,jdbcType=CHAR},
            </if>
            <if test="industry != null">
                #{industry,jdbcType=INTEGER},
            </if>
            <if test="industrySecond != null">
                #{industrySecond,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=CHAR},
            </if>
            <if test="political != null">
                #{political,jdbcType=TINYINT},
            </if>
            <if test="category != null">
                #{category,jdbcType=CHAR},
            </if>
            <if test="workLocation != null">
                #{workLocation,jdbcType=CHAR},
            </if>
            <if test="workLocationType != null">
                #{workLocationType,jdbcType=TINYINT},
            </if>
            <if test="cardId != null">
                #{cardId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="dr != null">
                #{dr,jdbcType=TINYINT},
            </if>
            <if test="talentSource != null">
                #{talentSource,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.talentcard.common.pojo.TalentPO">
        update t_talent
        <set>
            <if test="openId != null">
                open_id = #{openId,jdbcType=CHAR},
            </if>
            <if test="unionId != null">
                union_id = #{unionId,jdbcType=CHAR},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=CHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=TINYINT},
            </if>
            <if test="idCard != null">
                id_card = #{idCard,jdbcType=CHAR},
            </if>
            <if test="passport != null">
                passport = #{passport,jdbcType=CHAR},
            </if>
            <if test="driverCard != null">
                driver_card = #{driverCard,jdbcType=CHAR},
            </if>
            <if test="cardType != null">
                card_type = #{cardType,jdbcType=TINYINT},
            </if>
            <if test="workUnit != null">
                work_unit = #{workUnit,jdbcType=CHAR},
            </if>
            <if test="industry != null">
                industry = #{industry,jdbcType=INTEGER},
            </if>
            <if test="industrySecond != null">
                industry_second = #{industrySecond,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=CHAR},
            </if>
            <if test="political != null">
                political = #{political,jdbcType=TINYINT},
            </if>
            <if test="category != null">
                category = #{category,jdbcType=CHAR},
            </if>
            <if test="workLocation != null">
                work_location = #{workLocation,jdbcType=CHAR},
            </if>
            <if test="workLocationType != null">
                work_location_type = #{workLocationType,jdbcType=TINYINT},
            </if>
            <if test="cardId != null">
                card_id = #{cardId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="dr != null">
                dr = #{dr,jdbcType=TINYINT},
            </if>
            <if test="talentSource != null">
                talent_source = #{talentSource,jdbcType=INTEGER},
            </if>
        </set>
        where talent_id = #{talentId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.talentcard.common.pojo.TalentPO">
        update t_talent
        set open_id            = #{openId,jdbcType=CHAR},
            union_id           = #{unionId,jdbcType=CHAR},
            `name`             = #{name,jdbcType=CHAR},
            sex                = #{sex,jdbcType=TINYINT},
            id_card            = #{idCard,jdbcType=CHAR},
            passport           = #{passport,jdbcType=CHAR},
            driver_card        = #{driverCard,jdbcType=CHAR},
            card_type          = #{cardType,jdbcType=TINYINT},
            work_unit          = #{workUnit,jdbcType=CHAR},
            industry           = #{industry,jdbcType=INTEGER},
            industry_second    = #{industrySecond,jdbcType=INTEGER},
            phone              = #{phone,jdbcType=CHAR},
            political          = #{political,jdbcType=TINYINT},
            category           = #{category,jdbcType=CHAR},
            work_location      = #{workLocation,jdbcType=CHAR},
            work_location_type = #{workLocationType,jdbcType=TINYINT},
            card_id            = #{cardId,jdbcType=BIGINT},
            `status`           = #{status,jdbcType=TINYINT},
            create_time        = #{createTime,jdbcType=TIMESTAMP},
            dr                 = #{dr,jdbcType=TINYINT},
            talent_source      = #{talentSource,jdbcType=INTEGER}
        where talent_id = #{talentId,jdbcType=BIGINT}
    </update>
    <!--  insert，且返回主键-->
    <insert id="add" useGeneratedKeys="true" keyProperty="talentId" parameterType="com.talentcard.common.pojo.TalentPO">
        insert into t_talent (talent_id, open_id, union_id,
                              `name`, sex, id_card, passport,
                              driver_card, card_type, work_unit,
                              industry, industry_second, phone,
                              political, category, work_location,
                              work_location_type, card_id, `status`,
                              create_time, dr, talent_source)
        values (#{talentId,jdbcType=BIGINT}, #{openId,jdbcType=CHAR}, #{unionId,jdbcType=CHAR},
                #{name,jdbcType=CHAR}, #{sex,jdbcType=TINYINT}, #{idCard,jdbcType=CHAR}, #{passport,jdbcType=CHAR},
                #{driverCard,jdbcType=CHAR}, #{cardType,jdbcType=TINYINT}, #{workUnit,jdbcType=CHAR},
                #{industry,jdbcType=INTEGER}, #{industrySecond,jdbcType=INTEGER}, #{phone,jdbcType=CHAR},
                #{political,jdbcType=TINYINT}, #{category,jdbcType=CHAR}, #{workLocation,jdbcType=CHAR},
                #{workLocationType,jdbcType=TINYINT}, #{cardId,jdbcType=BIGINT}, #{status,jdbcType=TINYINT},
                #{createTime,jdbcType=TIMESTAMP}, #{dr,jdbcType=TINYINT}, #{talentSource,jdbcType=INTEGER})
    </insert>
    <!--    <select id="findBaseInfo" parameterType="java.lang.String" resultType="java.util.HashMap">-->
    <!--        select t.talent_id as talentId,-->
    <!--               `name`,-->
    <!--               sex,-->
    <!--               id_card     as idCard,-->
    <!--               passport,-->
    <!--               work_unit   as workUnit,-->
    <!--               industry,-->
    <!--               phone,-->
    <!--               t.`status`  as tStatus,-->
    <!--               political,-->
    <!--               education,-->
    <!--               pt_category as ptCategory,-->
    <!--               pt_info     as ptInfo,-->
    <!--               pq_category as pqCategory,-->
    <!--               pq_info     as pqInfo-->
    <!--        from t_talent t-->
    <!--                 left join t_user_current_info u-->
    <!--                           on t.talent_id = u.talent_id-->
    <!--        where t.open_id = #{openId,jdbcType=CHAR}-->
    <!--    </select>-->

    <select id="findOne" resultMap="TalentResultMap">
        select
        <include refid="Talent_BO_List"/>
        from t_talent t
                 left join t_certification c
                           on t.talent_id = c.talent_id
                 left join t_education e
                           on c.cert_id = e.cert_id
                 left join t_prof_title pt
                           on c.cert_id = pt.cert_id
                 left join t_prof_quality pq
                           on c.cert_id = pq.cert_id
                 left join t_talent_honour th
                           on c.cert_id = th.cert_id
        where t.open_id = #{openId,jdbcType=CHAR}
          and c.status = #{status,jdbcType=TINYINT}
          and t.dr = 1
    </select>

    <select id="findRegisterOne" parameterType="java.lang.String" resultMap="TalentResultMap">
        select
        <include refid="Talent_BO_List"/>
        from t_talent t
                 left join t_certification c
                           on t.talent_id = c.talent_id
                 left join t_education e
                           on c.cert_id = e.cert_id
                 left join t_prof_title pt
                           on c.cert_id = pt.cert_id
                 left join t_prof_quality pq
                           on c.cert_id = pq.cert_id
                 left join t_talent_honour th
                           on c.cert_id = th.cert_id
        where t.open_id = #{openId,jdbcType=CHAR}
          and (c.status = 2 or c.status = 5 or c.status = 9)
          and t.dr = 1
    </select>

    <select id="selectByOpenId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_talent t
        where t.open_id = #{openId,jdbcType=BIGINT}
        and t.dr=1
    </select>

    <select id="query" resultType="com.talentcard.common.bo.TalentBO">
        select t.talent_id as talentId,
        t.create_time as createTime,
        t.`name`,
        t.sex,
        uci.education as educ,
        uci.pt_category as title,
        uci.pq_category as quality,
        c.name as cname,
        c.num as cnum,
        uci.honour_id as honour
        from t_talent t
        left join t_user_current_info uci on t.talent_id = uci.talent_id
        left join t_user_card c on t.talent_id = c.talent_id
        where t.status != 1 and c.status != 3
        and t.dr=1
        <if test="start != null and start !=''">and t.create_time >= #{start}</if>
        <if test="end != null and end !=''">and t.create_time &lt;= #{end}</if>
        <if test="name != null and name !=''">and t.`name` like '%' #{name} '%'</if>
        <if test="sex != null and sex !=0">and t.sex = #{sex}</if>
        <if test="educ != null and educ !=0">and uci.education = #{educ}</if>
        <if test="title != null and title !=0">and uci.pt_category = #{title}</if>
        <if test="quality != null and quality !=0">and uci.pq_category = #{quality}</if>
        <if test="honour != null and honour != 0">and uci.honour_id = #{honour}</if>
        <if test="card != null and card !=''">and (c.name like '%' #{card} '%' or c.num like '%' #{card} '%')</if>
        order by t.talent_id desc
    </select>
    <select id="queryCert" resultType="com.talentcard.common.bo.TalentBO">
        select t.talent_id as talentId,
        t.create_time as createTime,
        t.`name`,
        t.sex,
        uci.education as educ,
        uci.pt_category as title,
        uci.pq_category as quality,
        uc.name as cname,
        uc.num as cnum,
        uci.talent_category as category,
        uci.honour_id as honour,
        c.title as cTitle,
        c.initial_word as cInitialWord
        from t_talent t
        left join t_user_current_info uci on t.talent_id = uci.talent_id
        left join t_user_card uc on t.talent_id = uc.talent_id
        left join t_card c on c.card_id = uc.card_id
        where t.status = 1 and c.status = 2
        and t.dr=1
        <if test="start != null and start !=''">and t.create_time >= #{start}</if>
        <if test="end != null and end !=''">and t.create_time &lt;= #{end}</if>
        <if test="name != null and name !=''">and t.`name` like '%' #{name} '%'</if>
        <if test="sex != null and sex !=0">and t.sex = #{sex}</if>
        <if test="educ != null and educ !=0">and uci.education = #{educ}</if>
        <if test="title != null and title !=0">and uci.pt_category = #{title}</if>
        <if test="quality != null and quality !=0">and uci.pq_category = #{quality}</if>
        <if test="card != null and card !=''">and (uc.name like '%' #{card} '%' or uc.num like '%' #{card} '%')</if>
        <if test="category != null and category!=''">and uci.talent_category like '%' #{category} '%'</if>
        <if test="honour != null and honour != 0">and uci.honour_id = #{honour}</if>
--         order by t.create_time desc
    </select>
    <select id="queryDetail" parameterType="java.lang.Long" resultType="com.talentcard.common.bo.TalentBO">
        select t.talent_id       as talentId,
               t.create_time     as createTime,
               t.`name`,
               t.sex,
               t.id_card         as idCard,
               t.work_unit       as workUnit,
               t.industry,
               t.industry_second as industrySecond,
               t.phone,
               t.political       as political,
               t.card_type       as cardType,
               t.id_card         as idCard,
               t.passport        as passport,
               t.driver_card     as driverCard,
               t.work_location   as workLocation,
               t.talent_source   as talentSource,
               uci.education     as educ,
               uci.school,
               uci.first_class   as `first`,
               uci.major,
               uci.pt_category   as title,
               uci.pt_info       as ptInfo,
               uci.pq_category   as quality,
               uci.pq_info       as pqInfo,
               uci.honour_id     as honour,
               uci.graduate_time as graduateTime,
               c.name            as cname,
               c.num             as cnum
        from t_talent t
                 left join t_user_current_info uci on t.talent_id = uci.talent_id
                 left join t_user_card c on t.talent_id = c.talent_id
        where t.talent_id = #{tid,jdbcType=BIGINT}
          and t.dr = 1
        limit 1
    </select>

    <select id="queryTalentStatus" parameterType="java.util.Map"
            resultType="com.talentcard.common.bo.TalentCertStatusBO">
        select t.talent_id as talentId, t.name, t.sex, e.education, pt.category as ptCategory, pq.category as
        pqCategory, t.status, t.create_time as createTime
        from t_talent t
        left join t_education e on t.talent_id = e.talent_id
        left join t_prof_title pt on t.talent_id = pt.talent_id
        left join t_prof_quality pq on t.talent_id = pq.talent_id
        where t.dr=1
        <if test="name != null and name != ''">
            and t.name like '%' #{name} '%'
        </if>
        <if test="sex != null and sex != ''">
            and t.sex = #{sex}
        </if>
        <if test="education != null and education != ''">
            and e.education = #{education}
        </if>
        <if test="pqCategory != null and pqCategory != ''">
            and pq.category = #{pqCategory}
        </if>
        <if test="pqCategory != null and pqCategory != ''">
            and pt.category = #{ptCategory}
        </if>
        <if test="status != null and status != ''">
            and t.`status` = #{status}
        </if>
        <if test="(startTime != null and startTime != '') and (endTime != null and endTime != '')">
            and t.create_time between #{startTime} AND #{endTime}
        </if>
        <if test="(startTime != null and startTime != '') and (endTime == null || endTime == '')">
            AND t.create_time &gt;= #{startTime}
        </if>
        <if test="(startTime != null || startTime != '') and (endTime != null and endTime != '')">
            AND t.create_time &lt;= #{endTime}
        </if>
        order by t.create_time asc
    </select>
    <select id="activate" resultType="com.talentcard.common.bo.ActivcateBO">
        select t.talent_id     as talentId,
               c.cert_id       as certId,
               uc.uc_id        as ucId,
               uci.uci_id      as uciId,
               card.wx_card_id as wxCardId,
               uc.num          as code,
               card.card_id    as cardId
        from t_talent t
                 left join t_certification c
                           on t.talent_id = c.talent_id
                 left join t_user_card uc
                           on t.talent_id = uc.talent_id
                 left join t_user_current_info uci
                           on t.talent_id = uci.talent_id
                 left join t_card card
                           on uc.card_id = card.card_id
        where t.open_id = #{openId, jdbcType=CHAR}
          and c.status = #{certificationStatus, jdbcType=TINYINT}
          and uc.status = #{userCardStatus, jdbcType=TINYINT}
          and t.dr = 1
          and card.dr = 1
    </select>
    <select id="ifExistGetCard" resultType="java.lang.Integer">
        select count(t.talent_id)
        from t_talent t
                 left join t_certification c
                           on t.talent_id = c.talent_id
        where t.open_id = #{openId,jdbcType=CHAR}
          and (c.status = 2 or c.status = 4)
          and t.dr = 1
    </select>
    <select id="findGetCard" resultType="com.talentcard.common.bo.ActivcateBO">
        select t.talent_id     as talentId,
               c.cert_id       as certId,
               uc.uc_id        as ucId,
               uci.uci_id      as uciId,
               card.wx_card_id as wxCardId,
               uc.num          as code,
               card.card_id    as cardId
        from t_talent t
                 left join t_certification c
                           on t.talent_id = c.talent_id
                 left join t_user_card uc
                           on t.talent_id = uc.talent_id
                 left join t_user_current_info uci
                           on t.talent_id = uci.talent_id
                 left join t_card card
                           on uc.card_id = card.card_id
        where t.open_id = #{openId, jdbcType=CHAR}
          and ((c.status = 2) or (c.status = 4))
          and uc.status = 1
          and t.dr = 1
    </select>
    <select id="ifCompleteCertificate" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(t.talent_id)
        from t_talent t
                 left join t_certification c
                           on t.talent_id = c.talent_id
        where t.open_id = #{openId, jdbcType=CHAR}
          and (c.status = 9)
          and t.dr = 1
    </select>

    <select id="idCardIfUnique" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(t.talent_id)
        from t_talent t
        where t.id_card = #{idCard, jdbcType=CHAR}
          and t.dr = 1
    </select>
    <select id="ifInAudit" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(t.talent_id)
        from t_talent t
                 left join t_certification c
                           on t.talent_id = c.talent_id
        where t.open_id = #{openId, jdbcType=CHAR}
          and (c.status = 3 or c.status = 4)
          and t.dr = 1
    </select>
    <select id="ifInCertificate" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(t.talent_id)
        from t_talent t
                 left join t_certification c
                           on t.talent_id = c.talent_id
        where t.open_id = #{openId, jdbcType=CHAR}
          and (c.status = 1 or c.status = 3 or c.status = 4)
          and t.dr = 1
    </select>
    <select id="queryByOpenid" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_talent
        where open_id = #{openId,jdbcType=CHAR} and dr = 1
    </select>

    <select id="findCurrentSeniorCard" resultType="java.util.HashMap">
        select t.talent_id as talentId,
               c.cert_id   as certId,
               uc.card_id  as cardId,
               uc.uc_id    as ucId
        from t_talent t
                 left join t_certification c
                           on t.talent_id = c.talent_id
                 left join t_user_card uc
                           on t.talent_id = uc.talent_id
        where t.talent_id = #{talentId,jdbcType=BIGINT}
          and c.status = 1
          and uc.status = 2
    </select>

    <select id="certApprovalDetail" resultMap="TalentResultMap">
        select
        <include refid="Talent_BO_List"/>
        from t_talent t
                 left join t_certification c
                           on t.talent_id = c.talent_id
                 left join t_education e
                           on c.cert_id = e.cert_id
                 left join t_prof_title pt
                           on c.cert_id = pt.cert_id
                 left join t_prof_quality pq
                           on c.cert_id = pq.cert_id
                 left join t_talent_honour th
                           on c.cert_id = th.cert_id
        where c.cert_id = #{certId,jdbcType=BIGINT}
          and t.dr = 1
    </select>
    <select id="selectByIdCard" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_talent
        where id_card = #{idCard,jdbcType=CHAR}
    </select>

    <select id="selectByPassport" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_talent
        where passport = #{passport,jdbcType=CHAR}
    </select>
    <select id="selectByOpenIdNotDr" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_talent
        where open_id = #{openId,jdbcType=CHAR}
    </select>

    <select id="queryByUnionId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_talent
        where union_id = #{unionId,jdbcType=CHAR} and dr = 1
    </select>

    <select id="queryAllNullUnionId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_talent
        where dr = 1 and union_id is null
    </select>
    <select id="queryByBreakIDAndTime" resultType="com.talentcard.common.pojo.TalentUnConfirmSendPO">
        select talent_id as talentId, open_id as openId from t_talent
        where talent_id>#{unSendID} and <![CDATA[ create_time<=#{time} ]]> and status=#{status} and dr=1
    </select>


</mapper>
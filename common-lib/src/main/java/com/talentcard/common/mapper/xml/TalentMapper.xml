<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.talentcard.common.mapper.TalentMapper">
  <resultMap id="BaseResultMap" type="com.talentcard.common.pojo.TalentPO">
    <id column="talent_id" jdbcType="BIGINT" property="talentId" />
    <result column="open_id" jdbcType="CHAR" property="openId" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="id_card" jdbcType="CHAR" property="idCard" />
    <result column="passport" jdbcType="CHAR" property="passport" />
    <result column="work_unit" jdbcType="CHAR" property="workUnit" />
    <result column="industry" jdbcType="CHAR" property="industry" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="category" jdbcType="CHAR" property="category" />
    <result column="card_id" jdbcType="BIGINT" property="cardId" />
  </resultMap>
  <resultMap id="TalentResultMap" type="com.talentcard.common.bo.TalentBO">
    <id column="t_talent_id" jdbcType="BIGINT" property="talentId" />
    <result column="open_id" jdbcType="CHAR" property="openId" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="id_card" jdbcType="CHAR" property="idCard" />
    <result column="passport" jdbcType="CHAR" property="passport" />
    <result column="work_unit" jdbcType="CHAR" property="workUnit" />
    <result column="industry" jdbcType="CHAR" property="industry" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="t_create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="t_status" jdbcType="TINYINT" property="status" />
    <result column="t_category" jdbcType="CHAR" property="category" />
    <result column="card_id" jdbcType="BIGINT" property="cardId" />

    <result column="c_cert_id" jdbcType="BIGINT" property="certId" />
    <result column="political" jdbcType="CHAR" property="political" />
    <result column="c_status" jdbcType="TINYINT" property="certificationStatus" />
    <result column="current_type" jdbcType="TINYINT" property="currentType" />

    <collection property ="educationPOList" ofType="com.talentcard.common.pojo.EducationPO">
      <id column="educ_id" jdbcType="BIGINT" property="educId" />
      <result column="education" jdbcType="INTEGER" property="education" />
      <result column="school" jdbcType="CHAR" property="school" />
      <result column="frist_class" jdbcType="TINYINT" property="fristClass" />
      <result column="major" jdbcType="CHAR" property="major" />
      <result column="e_educ_picture" jdbcType="CHAR" property="educPicture" />
      <result column="e_cert_id" jdbcType="BIGINT" property="certId" />
      <result column="e_talent_id" jdbcType="BIGINT" property="talentId" />
      <result column="e_status" jdbcType="TINYINT" property="status" />
    </collection>
    <collection property ="profTitlePOList" ofType="com.talentcard.common.pojo.ProfTitlePO">
      <id column="pt_id" jdbcType="BIGINT" property="ptId" />
      <result column="category" jdbcType="INTEGER" property="category" />
      <result column="info" jdbcType="CHAR" property="info" />
      <result column="picture" jdbcType="CHAR" property="picture" />
      <result column="cert_id" jdbcType="BIGINT" property="certId" />
      <result column="talent_id" jdbcType="BIGINT" property="talentId" />
      <result column="status" jdbcType="TINYINT" property="status" />
    </collection>
    <collection property ="profQualityPOList" ofType="com.talentcard.common.pojo.ProfQualityPO">
      <id column="pq_id" jdbcType="BIGINT" property="pqId" />
      <result column="category" jdbcType="INTEGER" property="category" />
      <result column="info" jdbcType="CHAR" property="info" />
      <result column="picture" jdbcType="CHAR" property="picture" />
      <result column="cert_id" jdbcType="BIGINT" property="certId" />
      <result column="talent_id" jdbcType="BIGINT" property="talentId" />
      <result column="status" jdbcType="TINYINT" property="status" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    talent_id, open_id, `name`, sex, id_card, passport, work_unit, industry, phone, create_time, 
    `status`, category, card_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_talent
    where talent_id = #{talentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_talent
    where talent_id = #{talentId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.talentcard.common.pojo.TalentPO">
    insert into t_talent (talent_id, open_id, `name`, 
      sex, id_card, passport, work_unit, 
      industry, phone, create_time, 
      `status`, category, card_id
      )
    values (#{talentId,jdbcType=BIGINT}, #{openId,jdbcType=CHAR}, #{name,jdbcType=CHAR}, 
      #{sex,jdbcType=TINYINT}, #{idCard,jdbcType=CHAR}, #{passport,jdbcType=CHAR}, #{workUnit,jdbcType=CHAR}, 
      #{industry,jdbcType=CHAR}, #{phone,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=TINYINT}, #{category,jdbcType=CHAR}, #{cardId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.talentcard.common.pojo.TalentPO">
    insert into t_talent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="talentId != null">
        talent_id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="passport != null">
        passport,
      </if>
      <if test="workUnit != null">
        work_unit,
      </if>
      <if test="industry != null">
        industry,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="cardId != null">
        card_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="talentId != null">
        #{talentId,jdbcType=BIGINT},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=CHAR},
      </if>
      <if test="passport != null">
        #{passport,jdbcType=CHAR},
      </if>
      <if test="workUnit != null">
        #{workUnit,jdbcType=CHAR},
      </if>
      <if test="industry != null">
        #{industry,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="category != null">
        #{category,jdbcType=CHAR},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.talentcard.common.pojo.TalentPO">
    update t_talent
    <set>
      <if test="openId != null">
        open_id = #{openId,jdbcType=CHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=CHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=CHAR},
      </if>
      <if test="passport != null">
        passport = #{passport,jdbcType=CHAR},
      </if>
      <if test="workUnit != null">
        work_unit = #{workUnit,jdbcType=CHAR},
      </if>
      <if test="industry != null">
        industry = #{industry,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=CHAR},
      </if>
      <if test="cardId != null">
        card_id = #{cardId,jdbcType=BIGINT},
      </if>
    </set>
    where talent_id = #{talentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.talentcard.common.pojo.TalentPO">
    update t_talent
    set open_id = #{openId,jdbcType=CHAR},
      `name` = #{name,jdbcType=CHAR},
      sex = #{sex,jdbcType=TINYINT},
      id_card = #{idCard,jdbcType=CHAR},
      passport = #{passport,jdbcType=CHAR},
      work_unit = #{workUnit,jdbcType=CHAR},
      industry = #{industry,jdbcType=CHAR},
      phone = #{phone,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=TINYINT},
      category = #{category,jdbcType=CHAR},
      card_id = #{cardId,jdbcType=BIGINT}
    where talent_id = #{talentId,jdbcType=BIGINT}
  </update>

  <!--  insert，且返回主键-->
  <insert id="add" useGeneratedKeys="true" keyProperty="talentId" parameterType="com.talentcard.common.pojo.TalentPO">
    insert into t_talent (talent_id, `name`, sex,
      id_card, passport, work_unit,
      industry, phone, create_time
      )
    values (#{talentId,jdbcType=BIGINT}, #{name,jdbcType=CHAR}, #{sex,jdbcType=TINYINT},
      #{idCard,jdbcType=CHAR}, #{passport,jdbcType=CHAR}, #{workUnit,jdbcType=CHAR},
      #{industry,jdbcType=CHAR}, #{phone,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <select id="findRegisterOne" parameterType="java.util.HashMap" resultMap="TalentResultMap">
    select
    t.talent_id as talentId, `name` , sex, id_card as idCard, passport, work_unit as workUnity, industry, phone,
    t.`status` as tStatus, c.cert_id as certId, c.status as cStatus, current_type as currentType,
    education, school, first_class as firstClass, major, pt.category as ptCategory, pt.info as ptInfo,
    pq.category as pqCategory, pq.info as pqInfo
    from t_talent t
    left join t_certification c
    on  t.talent_id = c.talent_id
    left join t_education e
    on c.cert_id = e.cert_id
    left join t_prof_title pt
    on c.cert_id = pt.cert_id
    left join t_prof_quality pq
    on c.cert_id = pq.cert_id
    where t.open_id = #{openId,jdbcType=CHAR}
    and c.status = 3
  </select>
  <select id="findOne" parameterType="java.util.HashMap" resultMap="TalentResultMap">
    select
    talent_id as talentId, `name` , sex, id_card as idCard, passport, work_unit as workUnity, industry, phone,
    t.`status` as tStatus, c.cert_id as certId,
    from t_talent t
    left join t_certification c
    on  t.talent_id = c.talent_id
    left join t_education e
    on c.cert_id = e.cert_id
    left join t_prof_title pt
    on c.cert_id = pt.cert_id
    left join t_prof_quality pq
    on c.cert_id = pq.cert_id
    where t.open_id = #{openId,jdbcType=CHAR}
    and c.status = 3
  </select>
</mapper>
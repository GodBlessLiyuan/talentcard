<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.talentcard.common.mapper.PolicyApplyMapper">
    <resultMap id="BaseResultMap" type="com.talentcard.common.pojo.PolicyApplyPO">
        <id column="pa_id" jdbcType="BIGINT" property="paId"/>
        <result column="talent_id" jdbcType="BIGINT" property="talentId"/>
        <result column="talent_name" jdbcType="CHAR" property="talentName"/>
        <result column="policy_id" jdbcType="BIGINT" property="policyId"/>
        <result column="policy_name" jdbcType="CHAR" property="policyName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="actual_funds" jdbcType="DECIMAL" property="actualFunds"/>
        <result column="policy_approval_id" jdbcType="BIGINT" property="policyApprovalId"/>
    </resultMap>
    <resultMap id="DetailResultMap" type="com.talentcard.common.bo.PolicyApplyBO">
        <id column="pa_id" jdbcType="BIGINT" property="paId"/>
        <result column="talent_id" jdbcType="BIGINT" property="talentId"/>
        <result column="open_id" jdbcType="CHAR" property="openId"/>
        <result column="talent_name" jdbcType="CHAR" property="talentName"/>
        <result column="policy_id" jdbcType="BIGINT" property="policyId"/>
        <result column="policy_name" jdbcType="CHAR" property="policyName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="num" jdbcType="CHAR" property="num"/>
        <result column="bank_num" jdbcType="CHAR" property="bankNum"/>
        <result column="bank_name" jdbcType="CHAR" property="bankName"/>
        <result column="role_name" jdbcType="CHAR" property="roleName"/>
        <result column="funds" jdbcType="DOUBLE" property="initialFunds"/>
        <collection property="approval" ofType="com.talentcard.common.pojo.PolicyApprovalPO">
            <id column="approval_id" jdbcType="BIGINT" property="approvalId"/>
            <result column="approval_time" jdbcType="TIMESTAMP" property="createTime"/>
            <result column="type" jdbcType="CHAR" property="type"/>
            <result column="user_id" jdbcType="BIGINT" property="userId"/>
            <result column="username" jdbcType="CHAR" property="username"/>
            <result column="result" jdbcType="TINYINT" property="result"/>
            <result column="opinion" jdbcType="CHAR" property="opinion"/>
        </collection>
        <collection property="annexes" ofType="com.talentcard.common.pojo.AnnexPO">
            <id column="annex_id" jdbcType="BIGINT" property="annexId"/>
            <result column="name" jdbcType="CHAR" property="name"/>
            <result column="location" jdbcType="CHAR" property="location"/>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
    pa_id, talent_id, talent_name, policy_id, policy_name, create_time, `status`, actual_funds,
    policy_approval_id
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_policy_apply
        where pa_id = #{paId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_policy_apply
    where pa_id = #{paId,jdbcType=BIGINT}
  </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="paId" parameterType="com.talentcard.common.pojo.PolicyApplyPO">
    insert into t_policy_apply (pa_id, talent_id, talent_name,
      policy_id, policy_name, create_time,
      `status`, actual_funds, policy_approval_id
      )
    values (#{paId,jdbcType=BIGINT}, #{talentId,jdbcType=BIGINT}, #{talentName,jdbcType=CHAR},
      #{policyId,jdbcType=BIGINT}, #{policyName,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{status,jdbcType=TINYINT}, #{actualFunds,jdbcType=DECIMAL}, #{policyApprovalId,jdbcType=BIGINT}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.talentcard.common.pojo.PolicyApplyPO">
        insert into t_policy_apply
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="paId != null">
                pa_id,
            </if>
            <if test="talentId != null">
                talent_id,
            </if>
            <if test="talentName != null">
                talent_name,
            </if>
            <if test="policyId != null">
                policy_id,
            </if>
            <if test="policyName != null">
                policy_name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="actualFunds != null">
                actual_funds,
            </if>
            <if test="policyApprovalId != null">
                policy_approval_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="paId != null">
                #{paId,jdbcType=BIGINT},
            </if>
            <if test="talentId != null">
                #{talentId,jdbcType=BIGINT},
            </if>
            <if test="talentName != null">
                #{talentName,jdbcType=CHAR},
            </if>
            <if test="policyId != null">
                #{policyId,jdbcType=BIGINT},
            </if>
            <if test="policyName != null">
                #{policyName,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="actualFunds != null">
                #{actualFunds,jdbcType=DECIMAL},
            </if>
            <if test="policyApprovalId != null">
                #{policyApprovalId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.talentcard.common.pojo.PolicyApplyPO">
        update t_policy_apply
        <set>
            <if test="talentId != null">
                talent_id = #{talentId,jdbcType=BIGINT},
            </if>
            <if test="talentName != null">
                talent_name = #{talentName,jdbcType=CHAR},
            </if>
            <if test="policyId != null">
                policy_id = #{policyId,jdbcType=BIGINT},
            </if>
            <if test="policyName != null">
                policy_name = #{policyName,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=TINYINT},
            </if>
            <if test="actualFunds != null">
                actual_funds = #{actualFunds,jdbcType=DECIMAL},
            </if>
            <if test="policyApprovalId != null">
                policy_approval_id = #{policyApprovalId,jdbcType=BIGINT},
            </if>
        </set>
        where pa_id = #{paId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.talentcard.common.pojo.PolicyApplyPO">
    update t_policy_apply
    set talent_id = #{talentId,jdbcType=BIGINT},
      talent_name = #{talentName,jdbcType=CHAR},
      policy_id = #{policyId,jdbcType=BIGINT},
      policy_name = #{policyName,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=TINYINT},
      actual_funds = #{actualFunds,jdbcType=DECIMAL},
      policy_approval_id = #{policyApprovalId,jdbcType=BIGINT}
    where pa_id = #{paId,jdbcType=BIGINT}
  </update>

    <select id="query" resultMap="DetailResultMap">
        select pa.pa_id,
        pa.talent_id,
        t.open_id,
        pa.talent_name,
        pa.policy_id,
        pa.policy_name,
        pa.create_time,
        pa.`status`,
        p.num,
        b.num as bank_num,
        b.name as bank_name,
        r.name as role_name
        from t_policy_apply pa
        left join t_bank b on pa.pa_id = b.pa_id
        left join t_policy p on pa.policy_id = p.policy_id
        left join t_role r on p.role_id = r.role_id
        left join t_talent t on pa.talent_id = t.talent_id
        where p.dr = 1
        <if test="start != null and start !=''">and pa.create_time >= #{start}</if>
        <if test="end != null and end !=''">and pa.create_time &lt;= #{end}</if>
        <if test="name != null and name !=''">and pa.policy_name like '%' #{name} '%'</if>
        <if test="num != null and num !=''">and p.num like '%' #{num} '%'</if>
        <if test="apply != null and apply !=''">and pa.talent_name like '%' #{apply} '%'</if>
        <if test="status != null and status !=0">and pa.`status` = #{status,jdbcType=TINYINT}</if>
        <if test="roleType ==1 and responsibleUnitId!=null and responsibleUnitId!=0 ">
            and p.role_id = #{responsibleUnitId,jdbcType=BIGINT}
        </if>
        <if test="roleType ==2">
            and p.role_id = #{roleId,jdbcType=BIGINT}
        </if>
        order by pa.`status` = 3 desc, pa.create_time desc
    </select>
    <select id="queryByTalentId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_policy_apply
        where talent_id = #{talentId,jdbcType=BIGINT}
        order by create_time desc
    </select>
    <select id="queryDetail" parameterType="java.lang.Long" resultMap="DetailResultMap">
        select pa.pa_id,
               pa.talent_id,
               pa.talent_name,
               pa.policy_id,
               pa.policy_name,
               pa.create_time,
               pa.`status`,
               p.num,
               b.num           as bank_num,
               b.name          as bank_name,
               a.annex_id,
               a.name,
               a.location,
               pal.approval_id,
               pal.create_time as approval_time,
               pal.type,
               pal.username,
               pal.result,
               pal.opinion,
               p.funds as funds
        from t_policy_apply pa
                 left join t_bank b on pa.pa_id = b.pa_id
                 left join t_policy_approval pal on pa.pa_id = pal.pa_id
                 left join t_annex a on pa.pa_id = a.pa_id
                 left join t_policy p on pa.policy_id = p.policy_id
        where pa.pa_id = #{paId,jdbcType=BIGINT}
    </select>
    <select id="queryByTidAndPidAndMonth" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_policy_apply
        where talent_id = #{talentId,jdbcType=BIGINT} and policy_id = #{policyId,jdbcType=BIGINT}
        <if test="month != null and month != 0">
            and (`status` = 3 or create_time between date_sub(now(), interval #{month,jdbcType=BIGINT} month) and now())
        </if>
    </select>
    <select id="countWaitApproval" resultType="java.lang.Long">
        select count(pa_id)
        from t_policy_apply pa
        left join t_policy p on pa.policy_id = p.policy_id
        where pa.`status` = 3
        and p.dr = 1
        <if test="roleId != null and roleId !=''">
        and p.role_id = #{roleId,jdbcType=BIGINT}
        </if>
    </select>
    <select id="applyNumCount" parameterType="com.talentcard.common.dto.ApplyNumCountDTO" resultType="com.talentcard.common.bo.ApplyNumCountBO">
        select
        sum(CASE WHEN pa.`status`=1 THEN 1 ELSE 0 END) as agreeNum,
        sum(CASE WHEN pa.`status`=2 THEN 1 ELSE 0 END) as rejectNum,
        sum(CASE WHEN pa.`status`=3 THEN 1 ELSE 0 END) as waitApprovalNum
        from t_policy_apply pa
        left join t_policy p on pa.policy_id = p.policy_id
        where p.dr = 1
        <if test="start != null and start !=''">and pa.create_time >= #{start}</if>
        <if test="end != null and end !=''">and pa.create_time &lt;= #{end}</if>
        <if test="name != null and name !=''">and pa.policy_name like '%' #{name} '%'</if>
        <if test="num != null and num !=''">and p.num like '%' #{num} '%'</if>
        <if test="apply != null and apply !=''">and pa.talent_name like '%' #{apply} '%'</if>
        <if test="status != null and status !=0">and pa.`status` = #{status,jdbcType=TINYINT}</if>
        <if test="roleType ==1 and responsibleUnitId!=null and responsibleUnitId!=0 ">
            and p.role_id = #{responsibleUnitId,jdbcType=BIGINT}
        </if>
        <if test="roleType ==2">
            and p.role_id = #{roleId,jdbcType=BIGINT}
        </if>
    </select>

    <select id="queryBankByTalentId" resultType="com.talentcard.common.bo.PoComplianceBO">
        select
        b.bank_id as bankId, b.num as bankNum, b.name as bankName
        from t_policy_apply p left join t_bank b on p.pa_id=b.pa_id
        <where>
           <if test="talentId != null and talentId != ''">
            and p.talent_id= #{talentId,jdbcType=BIGINT}
           </if>
            <if test="policyId != null and policyId != ''">
                and p.policy_id= #{policyId,jdbcType=BIGINT}
            </if>
        </where>
        order by p.pa_id desc limit 1
    </select>
    <select id="selectAll"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_policy_apply order by pa_id desc
    </select>

    <select id="selectByMap" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_policy_apply
        <where>
            <if test="talentId != null and talentId != ''">
                and talent_id= #{talentId,jdbcType=BIGINT}
            </if>
            <if test="policyId != null and policyId != ''">
                and policy_id= #{policyId,jdbcType=BIGINT}
            </if>
            <if test="status != null and status != ''">
                and `status`= #{status,jdbcType=BIGINT}
            </if>
        </where>
        order by pa_id desc
    </select>
    <select id="selectPaidByMap" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_policy_apply
        <where>
            <if test="talentId != null and talentId != ''">
                and talent_id= #{talentId,jdbcType=BIGINT}
            </if>
            <if test="policyId != null and policyId != ''">
                and policy_id= #{policyId,jdbcType=BIGINT}
            </if>
        </where>
        order by pa_id desc limit 1
    </select>
    <!--政策审批20201023修改添加-->
    <select id="pageQuery" parameterType="java.util.Map" resultType="com.talentcard.common.bo.PolicyApprovalBO">
        select p.policy_id as policyId,
        p.name as policyName,
        p.num as num,
        ps.total as total,
        ps.not_approval as notApprovalNum,
        ps.not_apply as notApplyNum,
        ps.pass as passNum,
        ps.reject as rejectNum,
        p.start_time as startTime,
        p.end_time as endTime,
        pt.p_type_name as policyTypeName,
        r.name as responsibleUnit,
        p.up_down as upDown
        from
        t_policy p
        left join po_statistics ps on p.policy_id = ps.policy_id
        left join po_type pt on p.p_tId = pt.p_tId
        left join t_role r on p.role_id = r.role_id
        where p.dr = 1
        <if test="rid != null and rid !=''">and p.role_id = #{rid,jdbcType=TINYINT}</if>
        <if test="pname != null and pname !=''">and p.name like '%' #{pname} '%'</if>
        <if test="num != null and num !=''">and p.num like '%' #{num} '%'</if>
        <if test="status != null and status !='' and status == 1">
            and <![CDATA[ p.start_time <= #{currentTime} and end_time > #{currentTime} ]]>
            and p.up_down = 1
        </if>
        <if test="status != null and status !='' and status == 2">
            and <![CDATA[ p.start_time >= #{currentTime}]]>
            and p.up_down = 1
        </if>
        <if test="status != null and status !='' and status == 3">
            and <![CDATA[ p.end_time <= #{currentTime}]]>
            and p.up_down = 1
        </if>
        <if test="status != null and status !='' and status == 4">
            and p.up_down = 2
        </if>
        <if test="ptid != null and ptid !=''">
            and p.p_tId = #{ptid,jdbcType=BIGINT}
        </if>
        order by ps.not_approval desc,p.up_down asc, p.update_time desc
    </select>
    <!--不同角色下的待审批数量-->
    <select id="notApprovalNum" parameterType="java.lang.Long" resultType="java.lang.Long">
        select
        sum(ps.not_approval) as notApprovalNum
        from
        t_policy p
        left join po_statistics ps on p.policy_id = ps.policy_id
        <where>
            <if test="rid != null and rid !=''">
                p.role_id = #{rid,jdbcType=BIGINT}
            </if>
        </where>
    </select>
</mapper>